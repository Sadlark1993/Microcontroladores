CCS PCM C Compiler, Version 5.108Pd, 1               01-ago-22 19:03
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\Sadla\OneDrive\Documentos\MEGAsync\doc\Facul\Microcontroladores\Projetos\03interrupt\interrupt.lst

               ROM used:   88 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <interrupt.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
.................... 
.................... 
.................... 
.................... int c=0;
.................... 
.................... #INT_RTCC
.................... void  RTCC_isr(void) 
.................... {
....................    //entra a cada 13.1ms
....................    if(c++ == 77){ //executar a cada 1 s
002F:  MOVF   27,W
0030:  INCF   27,F
0031:  SUBLW  4D
0032:  BTFSS  03.2
0033:  GOTO   03A
....................       output_toggle(PIN_D2);
0034:  BSF    03.5
0035:  BCF    08.2
0036:  MOVLW  04
0037:  BCF    03.5
0038:  XORWF  08,F
....................       c = 0;
0039:  CLRF   27
....................    }
003A:  BCF    0B.2
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01B
.................... }
.................... 
.................... void main()
003E:  MOVF   03,W
003F:  ANDLW  1F
0040:  MOVWF  03
0041:  CLRF   27
0042:  BSF    03.5
0043:  BSF    1F.0
0044:  BSF    1F.1
0045:  BSF    1F.2
0046:  BCF    1F.3
0047:  MOVLW  07
0048:  MOVWF  1C
0049:  BCF    03.7
.................... {
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256|RTCC_8_BIT);      //13,1 ms overflow
004A:  MOVF   01,W
004B:  ANDLW  C0
004C:  IORLW  07
004D:  MOVWF  01
.................... 
.................... 
....................    enable_interrupts(INT_RTCC);
004E:  BCF    03.5
004F:  BSF    0B.5
....................    enable_interrupts(GLOBAL);
0050:  MOVLW  C0
0051:  IORWF  0B,F
.................... 
....................    while(TRUE)
....................    {
....................       output_high(PIN_B4);
0052:  BSF    03.5
0053:  BCF    06.4
0054:  BCF    03.5
0055:  BSF    06.4
0056:  GOTO   052
.................... 
.................... 
....................       //TODO: User Code
....................    }
.................... }
0057:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
